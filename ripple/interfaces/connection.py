from __future__ import annotations
from typing import Protocol, Optional, List

from .record import RecordType


class ConnectionExtension(Protocol):
    def init(self, connection: ConnectionType) -> None: ...
    def on_tick(self) -> None: ...
    def on_record(self, record: RecordType) -> bool: ...


class ConnectionType(Protocol):
    def send_record(self, record: RecordType) -> None: ...
    def recv_record(self) -> Optional[RecordType]: ...
    def recv_all(self) -> List[RecordType]: ...
    def tick(*args, **kwargs) -> None: ...
    def close(self) -> None: ...
